name: ComplianceGetReports
author: PrestaShopCorp
description: Get reports of a scan launch into API Compliance, launched after @prestashopcorp/github-action-compliance-send.
inputs:
  version:
    description: 'Module version'
    required: true
    type: string
  technicalName:
    description: 'Module technicalName'
    required: true
    type: string
  token-uri:
    description: ''
    required: true
    type: string
  cookie: 
    description: ''
    required: true
    type: string
  client-id: 
    description: ''
    required: true
    type: string
  client-secret:
    description: ''
    required: true
    type: string 
  grant-type: 
    description: ''
    required: true
    type: string
  audience: 
    description: ''
    required: true
    type: string
  scope: 
    description: ''
    required: true
    type: string
  compliance-base-uri:
    description: ''
    required: true
    type: string

jobs:
  get-status:
    name: get status
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v3
        - name: Get OAUTH token from oauth.prestashop.com
          uses: ./actions/auth-compliance
          id: get_oauth_token
          with:
            token-uri: ${{ inputs.token-uri }}
            cookie: ${{ inputs.cookie }}
            client-id: ${{ inputs.client-id }}
            client-secret: ${{ inputs.client-secret }}
            grant-type: ${{ inputs.grant-type }}
            audience: ${{ inputs.audience }}
            scope: ${{ inputs.scope }}
        - name: get-status
          id: get_status
          run: |
            curl --location --request GET "${{ inputs.compliance-base-uri }}/orchestrator/v1/status?technicalName=${{ inputs.technicalName }}&version=${{ inputs.version }}" \
              --header "Connection: keep-alive" \
              --header 'Accept: application/json' \
              --header "Accept: */*" \
              --oauth2-bearer ${{ steps.get_oauth_token.outputs.TOKEN }} \
              --output status.json && exit 0
              jq --color-output . status.json | less -R && exit 0

            # Generate Matrix
            services=( $(jq -r '.servicesStatus[].service' status.json) ) && exit 0
            json=$(jq --compact-output --null-input '$ARGS.positional' --args -- "${services[@]}") && exit 0
            echo services="{\"services\":$json}" >> $GITHUB_OUTPUT && exit 0
    outputs:
      services: ${{ steps.get_status.outputs.services }}  

  get-report:
    name: get reports
    runs-on: ubuntu-latest  
    needs:
      - get-status
    strategy:
        matrix:
            services: '${{ fromJSON(needs.get-status.outputs.services).services }}' 
    steps:
      - name: Get OAUTH token from oauth.prestashop.com
        uses: ./../../actions/auth-compliance
        id: get_oauth_token
        with:
          token-uri: ${{ inputs.token-uri }}
          cookie: ${{ inputs.cookie }}
          client-id: ${{ inputs.client-id }}
          client-secret: ${{ inputs.client-secret }}
          grant-type: ${{ inputs.grant-type }}
          audience: ${{ inputs.audience }}
          scope: ${{ inputs.scope }}
      - name: init service name
        id: init_service_name
        run: |
          echo SERVICE_NAME=$(echo ${{ matrix.services }} | sed -e "s/-api$//") >> $GITHUB_OUTPUT && exit 0
      - name: get-report for ${{ matrix.services }}
        run: |
          curl --location --request GET "${{ inputs.compliance-base-uri }}/${{ steps.init_service_name.outputs.SERVICE_NAME }}/v1/report?technicalName=${{ inputs.technicalName }}&version=${{ inputs.version }}" \
            --header 'Accept: application/json' \
            --oauth2-bearer ${{ steps.get_oauth_token.outputs.TOKEN }} \
            --output report.json && exit 0
          jq --color-output . report.json | less -R && exit 0